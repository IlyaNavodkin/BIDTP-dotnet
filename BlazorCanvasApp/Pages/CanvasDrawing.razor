@page "/CanvasDrawing"
@using BIDTP.Dotnet.Core.Iteraction
@using BIDTP.Dotnet.Core.Iteraction.Contracts
@using BIDTP.Dotnet.Core.Iteraction.Enums
@using Example.Schemas.Dtos
@using Example.Schemas.Requests
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@inject IJSRuntime jsRuntime

<div>
    <button @onclick="EnableLineDrawingMode">Draw Lines</button>
    <button @onclick="EnablePointDrawingMode">Draw Points</button>
    <button @onclick="EnableMoveMode">Move Elements</button>
    <button @onclick="EnableDeleteMode">Delete Elements</button>
    <p>Current Mode: @currentMode</p>
    <p>SelectedPoint: @selectedPoint?.GUID</p>
    <p>SelectedLine: @selectedLine?.GUID</p>
</div>

<div @ref="divCanvas" @onclick="OnClick" @onmousemove="OnMouseMove" @onmousedown="OnMouseDown" @onmouseup="OnMouseUp">
    <Blazor.Extensions.Canvas.BECanvas @ref="myCanvas" Height="800" Width="800"></Blazor.Extensions.Canvas.BECanvas>
</div>

<h3>CanvasDrawing</h3>
<div>
    <ul>
        @foreach (var point in points)
        {
            <li>@($"X: {point.X}, Y: {point.Y}")</li>
        }
        @foreach (var line in lines)
        {
            <li>@($"Line: Start(X: {line.Start.X}, Y: {line.Start.Y}) - End(X: {line.End.X}, Y: {line.End.Y})")</li>
        }
    </ul>
</div>

